#!/bin/bash

############################## U SCRIPTS ###################################
##                  DanielDAN - danielolszyk1988@gmail.com                ##
##                      This program is Open Source                       ##
############################################################################


# bold=$(tput bold)                   # Text style bold
# normal=$(tput sgr0)                 # Text style normal

Print_logo() {
    echo -e "\e[33m         __           _       _        "
    echo -e "\e[33m /\ /\  / _\ ___ _ __(_)_ __ | |_ ___ \e[97;1m{\e[1;33mv0.3#alpha\e[0m\e[97;1m}\e[0m"
    echo -e "\e[33m/ / \ \ \ \ / __| '__| | '_ \| __/ __| "
    echo -e "\e[33m\ \_/ / _\ \ (__| |  | | |_) | |_\__ \ "
    echo -e "\e[33m \___/  \__/\___|_|  |_| .__/ \__|___/ "
    echo -e "\e[33m                       |_|             \e[39;4mhttps://uscripts.org\e[0m"
    printf "$(date) \n"
    Footer
}
Header(){                  # Print Headers inside functions
    local h="$@"
    echo " --------------------------------------------------------------"
    echo " ${h}"
    echo " --------------------------------------------------------------"
}
Footer() {
    echo ""
}
Noparam() {                  # Print message when no parameter
    Print_logo
    echo "error:    no parameters"
    echo "          --help or -h parameter for help"
    echo "Example:"
    echo "          ./uscripts -h"
    echo "          ./uscripts --help"
    echo "          ./us -h"
    echo "          ./us --help"
    Footer
}
Wrongparam() {               # Print message when wrong parameter
    printf "error:  incorrenct parameter "
}
Help() {                   # Help message
    Print_logo
    echo "Usage:  us.sh [option] [option=value]"
    echo "Example:  ./us -i -d -w -sC=60"
    echo ""
    echo "OPTIONS:"
    echo "--------"
    echo "-t    --checktor           Check are you using Tor or not"
    echo '-p    --ping               Ping (e.g. "ping=redhat.com") - [[default URL is "google.com"]]'
    echo '      --ping=URL'
    echo "-I    --checkip            Public ip"
    echo "-u    --uptime             Tell how long the system has been running"
    echo "-i    --systeminfo         System info and public ip address"
    echo "-k    --kernel             Check kernel version"
    echo "-d    --dns                Hostname and dns info and local ip"
    echo "-w    --who                Who is online"
    echo '-l    --last=value         Last logged in users (e.g. "last=10") - [[default prints everything]]'
    echo "-du   --discusage          Disc usage"
    echo "-ds   --discusages         Disc usage (short)"
    echo "-ks   --showkernels        Show old kernels list"
    echo "-kr   --removekernels      Remove old kernels"
    echo "-fe   --firmwareerrors     Show all firmware errors"
    echo "-vm   --virtualmemory      Report virtual memory statistics"
    echo "-mi   --memoryinfo         Print the memory information"
    echo "-ci   --cpuinfo            Print the cpu information"
    echo "-ca   --cpuarchitecture    Display information about the cpu architecture"
    echo "-cl   --cpuaverage         Check the cpu load average"
    echo "-cs   --cpustat            Check the cpu stat"
    echo "-hn   --handwarename       Find the server hardware name and model"
    echo "-ss   --checkswap          Check your current swappiness setting"
    echo '-sc   --changeswap=value   Change your current swappiness setting (e.g. "changeswap=60")'
    echo "-se   --swap=enable        Enable swap"
    echo "-sd   --swap=disable       Disable swap"
    echo "-tc   --checkthumbnail     Check thumbnail cache"
    echo "-tr   --removethumbnail    Remove thumbnail cache"
    echo "-ch   --chmod              Print chmod permissions table"
    echo "-sf   --subfolders         Tell you how many subfolders are here"
    echo "-uu   --aptupdate          Update and upgrade system, after remove all unused dependecies"
    echo "-----------------         ------------------------------------"
    echo "-h    --help               Print basic help message and exit"
    echo "-V    --version            Print program version and exit"
    echo "-U    --update             Update program to new version"
    echo "-A    --about              About..."
    Footer
}
Checktor() {                 # Check are you using Tor or not
    Header " Check Tor: "
    curl -sS https://check.torproject.org | grep --color -m1 'Congratulations.\|This browser\|is configured\|to use\|Tor.\|Sorry.\|You are\|not using'
    Footer
}
Ping() {
    Header " Ping: "
    ping google.com -c 8
    Footer
}
Ping2() {
    Header " Ping: "
    ping $ping_url -c 8
    Footer
}
Checkip() {                  # Public ip
    Header " ip address: "
    curl -sS ifconfig.me
    echo -e "\n"
}
Uptime() {
    Header "Uptime: "
    uptime
    Footer
}
Systeminfo() {               # System info (uname + curl ifconfig.me + lsb_release)
    # local LSB=/usr/bin/lsb_release            # Path to lsb_release script (system info)
    Header " System info: "
    lsb_release -cdir
    Footer
}
Kernel() {                   # Check kernel version
    Header " Kernel version: "
    uname -v
    Footer
}
Host_Dns() {                 # Hostname and DNS info and local ip
    Header " Hostname and DNS info and ip: "
    local dnsips=$(sed -e '/^$/d' /etc/resolv.conf | awk '{if (tolower($1)=="nameserver") print $2}')
    echo "Hostname : $(hostname -s)"
    echo "DNS domain : $(hostname -d)"
    echo "Fully qualified domain name : $(hostname -f)"
    echo "Network address (IP) : $(hostname -i)"
    echo "DNS name servers (DNS IP) : ${dnsips}"
    Footer
}
Who_is_online() {            # Who is online
    Header " Who is online: "
    who -H
    Footer
}    
Last_logged_in_users() {
    Header " Last logged in users: "
    last -n $last_number
    Footer
}
Last_logged_in_users2() {
    Header " Last logged in users: "
    last
    Footer
}
Disc_usage() {
    Header " Disc usage: "
    df --total -H
    Footer
}
Disc_usage_short() {
    Header " Disc usage short: "
    df / -H
    Footer
}
Show_kernels() {
    Header "Show old kernels list: "
    sudo dpkg --list 'linux-image*'
    Footer
}
Remove_kernels() {
    Header "Remove old kernels: "
    sudo apt-get remove linux-image-VERSION
    Footer
}
Firmware() {
    Headers "Firmware errors: "
    dmesg | grep -i -P --colour='never' 'firmware'
    Footer
}
Virtualmemory() {
    Header "Virtual memory statistics: "
    vmstat
    Footer
}
Memoryinfo() {
    Header "Memory information: "
    cat /proc/meminfo
    Footer
}
Cpuinfo() {
    Header "Cpu information: "
    cat /proc/cpuinfo
    Footer
}
Cpuarchitecture() {
    Header "Information about the CPU architecture: "
    lscpu
    Footer
}
Cpuaverage() {
    Header "Cpu load average: "
    cat /proc/loadavg
    Footer
}
Cpustat() {
    Header "Cpu stat: "
    cat /proc/stat
    Footer
}
Hardwarename() {
    Header "Server hardware name and model: "
    sudo dmidecode | grep -A3 '^System Information'
    Footer
}
Checkswap() {
    Header "Your current swappiness setting: "
    cat /proc/sys/vm/swappiness
    Footer
}
Changeswap() {
    Header "Change your current swappiness setting: "
    #echo "current value: " 
    #cat /proc/sys/vm/swappiness
    #echo "enter value: "
    #read xvalue
    sudo sysctl vm.swappiness=$swap_value
    Footer
}
Changeswap2() {
    Header "Change your current swappiness setting: "
    sudo sysctl vm.swappiness
    Footer
}
Enableswap() {
    Header "Enable swap: "
    sudo swap$swapon -a
    Footer
}
Disableswap() {
    Header "Disable swap: "
    sudo swap$swapoff -a
    Footer
}
Check_thumbnail() {
    Header "Check thumbnail cache: "
    du -sh ~/.cache/thumbnails
    Footer
}
Remove_thumbnail() {
    Header "Remove/Clean thumbnail cache: "
    sudo rm -rf ~/.cache/thumbnails/*
    Footer
}
Chmod_table() {
    local red="\e[0;91m"
    local reset="\e[0m"
    Header "chmod  -  Permissions Table:"
echo -e "
         |  U   G   O            ${red}Chmods:${reset}
          -----------            777 = rwxrwxrwx
 (r)ead  |  4   4   4            755 = rwxr-xr-x
 (w)rite |  2   2   2            644 = rw-r--r--
e(x)ecute|  1   1   1            700 = rwx------
         |                       750 = rwxr-x---

U=users   G=group   O=others"
Footer
}
Subfolders() {               # Tell you how many subfolders are in current path
    Header " Subfolders: "
    echo "Liczba podkatalog√≥w to:  " $(ls -al | grep '^d' | tail -n +3 | wc -l)
    Footer
}
Aptupdate() {                # Update and upgrade system, after remove all unused dependecies
    Header " System update: "
    sleep 2
    echo -e "Updating and upgrading system.... \n"
    sleep 2
    sudo apt update 
    sudo apt upgrade 
    sudo apt autoremove
    sudo apt remove --purge
    Header " DONE."
    Footer
}
Version() {                  # Program Version
    echo -e "Program version: v0.3#alpha"
}
About() {                    # About program
    echo '"UScripts" - means - "Usefull Scripts"'
    echo -e "License: Open Source"
}
Update() {                   # Update program
    echo "This option is not available yet"
    echo "Visit https://uscripts.org  or  https://github.com/dan1988dan/uscripts"
}


if [ "$1" = "" ]; then              # Option no parameter
    Noparam
fi

while [ ! -z "$1" ]; do             # Options
#for i in "$@"
#do
case $1 in
    --help|-h)
        shift
        Help
        ;;
    --checktor|-t)
        shift
        Checktor
        ;; 
    --ping|-p)
        shift
        Ping
        ;;
    --ping=*|-p=*)
        ping_url="${1#*=}"
        shift
        Ping2
        ;;
    --checkip|-I)
        shift
        Checkip
        ;;
    --uptime|-u)
        shift
        Uptime
        ;;
    --systeminfo|-i|i)
        shift
        Systeminfo
        ;;
    --kernel|-k|k)
        shift
        Kernel
        ;;
    --dns|-d|d)
        shift
        Host_Dns
        ;;
    --who|-w|w)
        shift
        Who_is_online
        ;;
    --last=*|-l=*)
        last_number="${1#*=}"
        shift
        Last_logged_in_users
        ;;
    --last|-l)
        shift
        Last_logged_in_users2
        ;;
    --discusage|-dU)
        shift
        Disc_usage
        ;;
    --discuseges|-dS)
        shift
        Disc_usage_short
        ;;
    --showkernels|-kS)
        shift
        Show_kernels
        ;;
    --removekernels|-kR)
        shift
        Remove_kernels
        ;;
    --firmwareerrors|-fE)
        shift
        Firmware
        ;;
    --virtualmemory|-vM)
        shift
        Virtualmemory
        ;;
    --memoryinfo|-mI)
        shift
        Memoryinfo
        ;;
    --cpuinfo|-cI)
        shift
        Cpuinfo
        ;;
    --cpuarchitecture|-cA)
        shift
        Cpuarchitecture
        ;;
    --cpuaverage|-cL)
        shift
        Cpuaverage
        ;;
    --cpustat|-cS)
        shift
        Cpustat
        ;;
    --hardwarename|-HN)
        shift
        Hardwarename
        ;;
    --checkswap|-sS)
        shift
        Checkswap
        ;;
    --changeswap=*|-sC=*)
        swap_value="${1#*=}"
        shift
        Changeswap
        ;;
    --changeswap|-sC)
        shift
        Changeswap2
        ;;
    --swap=enable|--swapenable|--swap=on|--swapon|-sE)
        swapon=on
        shift
        Enableswap
        ;;
    --swap=disable|--swapdisable|--swap=off|--swapoff|-sD)
        swapoff=off
        shift
        Disableswap
        ;;
    --checkthumbnails|-tC)
        shift
        Check_thumbnail
        ;;
    --removethumbnails|-tR)
        shift
        Remove_thumbnail
        ;;
    --chmod|-ch)
        shift
        Chmod_table
        ;;
    --subfolders|-sF)
        shift
        Subfolders
        ;;
    --aptupdate|-u)
        shift
        Aptupdate
        ;;
    --version|-V)
        shift
        Version
        ;;
    --update|-U)
        shift
        Update
        ;;
    --about|-A)
        shift
        About
        ;;
    *)
        shift
        Wrongparam
        exit
        ;;
esac
done